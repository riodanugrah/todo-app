{"ast":null,"code":"var _jsxFileName = \"/home/rodangh/ReactProject/todo-app/src/components/TodoList.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport TodoItem from \"./TodoItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoList = _ref => {\n  _s();\n\n  let {\n    isRefresh,\n    setRefresh\n  } = _ref;\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    // memanggil API untuk mengambil data todos\n    if (isRefresh) {\n      fetch(\"http://localhost:8000/todos\").then(res => {\n        return res.json();\n      }).then(data => {\n        setRefresh(false); // ketika Rest API sukses, simpan data dari response ke dalam state lokal\n\n        setTodos(data);\n      }).catch(err => {\n        setRefresh(false);\n\n        if (err.name === \"AbortError\") {\n          console.log(\"fetch aborted.\");\n        }\n      });\n    }\n  }, [isRefresh, setRefresh]);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    id: \"todo-list\",\n    children: todos.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n      todo: todo,\n      setRefresh: setRefresh\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoList, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["/home/rodangh/ReactProject/todo-app/src/components/TodoList.js"],"names":["useEffect","useState","TodoItem","TodoList","isRefresh","setRefresh","todos","setTodos","fetch","then","res","json","data","catch","err","name","console","log","map","todo","id"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,QAAQ,GAAG,QAA6B;AAAA;;AAAA,MAA5B;AAACC,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,GAA4B;AAC5C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,QAAII,SAAJ,EAAe;AACbI,MAAAA,KAAK,CAAC,6BAAD,CAAL,CACGC,IADH,CACSC,GAAD,IAAS;AACb,eAAOA,GAAG,CAACC,IAAJ,EAAP;AACD,OAHH,EAIGF,IAJH,CAISG,IAAD,IAAU;AACdP,QAAAA,UAAU,CAAC,KAAD,CAAV,CADc,CAEd;;AACAE,QAAAA,QAAQ,CAACK,IAAD,CAAR;AACD,OARH,EASGC,KATH,CASUC,GAAD,IAAS;AACdT,QAAAA,UAAU,CAAC,KAAD,CAAV;;AACA,YAAIS,GAAG,CAACC,IAAJ,KAAa,YAAjB,EAA+B;AAC7BC,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD;AACF,OAdH;AAeD;AACF,GAnBQ,EAmBN,CAACb,SAAD,EAAYC,UAAZ,CAnBM,CAAT;AAqBA,sBACE;AAAI,IAAA,EAAE,EAAC,WAAP;AAAA,cACGC,KAAK,CAACY,GAAN,CAAWC,IAAD,iBACT,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEA,IAAhB;AAAoC,MAAA,UAAU,EAAEd;AAAhD,OAA2Bc,IAAI,CAACC,EAAhC;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA/BD;;GAAMjB,Q;;KAAAA,Q;AAiCN,eAAeA,QAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport TodoItem from \"./TodoItem\";\n\nconst TodoList = ({isRefresh, setRefresh}) => {\n  const [todos, setTodos] = useState([]);\n\n  useEffect(() => {\n    // memanggil API untuk mengambil data todos\n    if (isRefresh) {\n      fetch(\"http://localhost:8000/todos\")\n        .then((res) => {\n          return res.json();\n        })\n        .then((data) => {\n          setRefresh(false)\n          // ketika Rest API sukses, simpan data dari response ke dalam state lokal\n          setTodos(data);\n        })\n        .catch((err) => {\n          setRefresh(false)\n          if (err.name === \"AbortError\") {\n            console.log(\"fetch aborted.\");\n          }\n        });\n    }\n  }, [isRefresh, setRefresh]);\n\n  return (\n    <ul id=\"todo-list\">\n      {todos.map((todo) => (\n        <TodoItem todo={todo} key={todo.id} setRefresh={setRefresh} />\n      ))}\n    </ul>\n  );\n};\n\nexport default TodoList;"]},"metadata":{},"sourceType":"module"}